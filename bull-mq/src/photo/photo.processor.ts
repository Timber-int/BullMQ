import {
  OnQueueActive,
  OnQueueCompleted,
  OnQueueFailed,
  OnQueueStalled,
  OnQueueWaiting,
  OnQueueError,
  Process,
  Processor,
} from '@nestjs/bull';
import { Job } from 'bull';
import * as sharp from 'sharp';
import { Scope } from '@nestjs/common';

@Processor('photo')
export class PhotoProcessor {
  // –û—Å–Ω–æ–≤–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –∑–∞–¥–∞—á—ñ "analyze_photo"
  @Process({ name: 'analyze_photo', concurrency: 1 })
  async handlePhoto(job: Job<{ filePath: string }>) {
    const { filePath } = job.data;
    console.log(`üñºÔ∏è –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ç–æ: ${filePath}`);

    try {
      const metadata = await this.getPhotoMetadata(filePath);
      console.log(`‚úÖ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ñ–æ—Ç–æ:`, metadata);
    } catch (err) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ —Ñ–æ—Ç–æ:', err.message);
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –≤–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è –º–µ—Ç–∞–¥–∞–Ω–∏—Ö –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (—Ä–æ–∑–º—ñ—Ä, —Ñ–æ—Ä–º–∞—Ç, –≥–ª–∏–±–∏–Ω–∞ –∫–æ–ª—å–æ—Ä—É —Ç–æ—â–æ)
  private async getPhotoMetadata(filePath: string) {
    return await sharp(filePath).metadata();
  }

  // üîÑ –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∫–æ–ª–∏ –∑–∞–¥–∞—á–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å —É —Å—Ç–∞—Ç—É—Å "–≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è"
  @OnQueueActive()
  onActive(job: Job) {
    console.log(`üîÑ –ó–∞–¥–∞—á–∞ –∞–∫—Ç–∏–≤–Ω–∞ (jobId: ${job.id})`);
  }

  // ‚úÖ –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ
  @OnQueueCompleted()
  onCompleted(job: Job, result: any) {
    console.log(`‚úÖ –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (jobId: ${job.id})`);
  }

  // ‚ùå –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è —É –≤–∏–ø–∞–¥–∫—É –Ω–µ–≤–¥–∞—á—ñ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ
  @OnQueueFailed()
  onFailed(job: Job, error: any) {
    console.error(
      `‚ùå –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –∑ –ø–æ–º–∏–ª–∫–æ—é (jobId: ${job.id}):`,
      error.message,
    );
  }

  // ‚è≥ –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è, –∫–æ–ª–∏ –∑–∞–¥–∞—á–∞ —á–µ–∫–∞—î –≤ —á–µ—Ä–∑—ñ
  @OnQueueWaiting()
  onWaiting(jobId: string | number) {
    console.log(`‚è≥ –ó–∞–¥–∞—á–∞ —á–µ–∫–∞—î —É —á–µ—Ä–∑—ñ (jobId: ${jobId})`);
  }

  // ‚ö†Ô∏è –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è, –∫–æ–ª–∏ –∑–∞–¥–∞—á–∞ –∑–∞–≤–∏—Å–∞—î –∫—ñ–ª—å–∫–∞ —Ä–∞–∑—ñ–≤
  @OnQueueStalled()
  onStalled(job: Job) {
    console.warn(`‚ö†Ô∏è –ó–∞–¥–∞—á–∞ –∑–∞–≤–∏—Å–ª–∞ (jobId: ${job.id})`);
  }

  // üßØ –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—Ä–∏ –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—ñ –ø–æ–º–∏–ª–∫–∏ –Ω–∞ —Ä—ñ–≤–Ω—ñ —á–µ—Ä–≥–∏
  @OnQueueError()
  onError(error: Error) {
    console.error('üßØ –ü–æ–º–∏–ª–∫–∞ –≤ —á–µ—Ä–∑—ñ:', error.message);
  }
}
